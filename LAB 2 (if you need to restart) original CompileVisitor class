/**
 * Visitor that compiles the code.
 * 
 * @author Tim
 * @version Feb 2, 2008
 */
public class CompileVisitor implements Visitor
{
    /**
     * Visits a ConstantExpression.
     * 
     * @see Visitor#visit(ConstantExpression)
     * @param expr
     */
    public void visit(ConstantExpression expr)
    {
    }

    /**
     * Visits a VariableExpression.
     * 
     * @see Visitor#visit(VariableExpression)
     * @param expr
     */
    public void visit(VariableExpression expr)
    {
    }

    /**
     * Pre-visits a BinaryExpression.
     * 
     * @see Visitor#preVisit(BinaryExpression)
     * @param expr
     */
    public void preVisit(BinaryExpression expr)
    {
    }
    
    /**
     * Visits a BinaryExpression.
     * 
     * @see Visitor#visit(BinaryExpression)
     * @param expr
     */
    public void visit(BinaryExpression expr)
    {
    }
    
    /**
     * Post-visits a BinaryExpression.
     * 
     * @see Visitor#postVisit(BinaryExpression)
     * @param expr
     */
    public void postVisit(BinaryExpression expr)
    {
    }

    /**
     * Pre-visits an AssignStatement.
     * 
     * @see Visitor#preVisit(AssignStatement)
     * @param stmt
     */
    public void preVisit(AssignStatement stmt)
    {
    }
    
    /**
     * Post-visits an AssignStatement.
     * 
     * @see Visitor#postVisit(AssignStatement)
     * @param stmt
     */
    public void postVisit(AssignStatement stmt)
    {
    }
    
    /**
     * Pre-visits a WhileStatement.
     * 
     * @see Visitor#preVisit(WhileStatement)
     * @param stmt
     */
    public void preVisit(WhileStatement stmt)
    {
    }
    
    /**
     * Called after the condition is visited, but before
     * the body for a WhileStatement.
     * 
     * @see Visitor#preBodyVisit(WhileStatement)
     * @param stmt
     */
    public void preBodyVisit(WhileStatement stmt)
    {
    }
    
    /**
     * Post-visits a WhileStatement.
     * 
     * @see Visitor#postVisit(WhileStatement)
     * @param stmt
     */
    public void postVisit(WhileStatement stmt)
    {
    }
    
    /**
     * Pre-visits an IfStatement.
     * 
     * @see Visitor#preVisit(IfStatement)
     * @param stmt
     */
    public void preVisit(IfStatement stmt)
    {
    }
    
    /**
     * Called after the condition is visited, but before
     * the then block for an IfStatement.
     * 
     * @see Visitor#preThenVisit(IfStatement)
     * @param stmt
     */
    public void preThenVisit(IfStatement stmt)
    {
    }
    
    /**
     * Called after the then block is visited, but before
     * the else block for an IfStatement.
     * 
     * @see Visitor#preElseVisit(IfStatement)
     * @param stmt
     */
    public void preElseVisit(IfStatement stmt)
    {
    }
    
    /**
     * Post-visits an IfStatement.
     * 
     * @see Visitor#postVisit(IfStatement)
     * @param stmt
     */
    public void postVisit(IfStatement stmt)
    {
    }

    /**
     * Returns the compiled code.
     * 
     * @return
     */
    public String getString()
    {
        return null;
    }
}
